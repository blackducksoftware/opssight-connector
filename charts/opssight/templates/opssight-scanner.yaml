apiVersion: v1
kind: ReplicationController
metadata:
  creationTimestamp: null
  labels:
    app: opssight
    component: scanner
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-opssight-scanner
  namespace: {{ .Release.Namespace }}
spec:
  {{- if eq .Values.status "Running" }}
  replicas: 1
  {{- else }}
  replicas: 0
  {{- end }}
  selector:
    app: opssight
    component: scanner
    name: {{ .Release.Name }}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: opssight
        component: scanner
        name: {{ .Release.Name }}
      name: {{ .Release.Name }}-opssight-scanner
    spec:
      containers:
      - args:
        - /etc/scanner/opssight.json
        command:
        - ./opssight-scanner
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-opssight-blackduck
        {{- if .Values.scanner.registry }}
          {{- if .Values.scanner.imageTag }}
        image: {{ .Values.scanner.registry }}/opssight-scanner:{{ .Values.scanner.imageTag }}
          {{- else }}
        image: {{ .Values.scanner.registry }}/opssight-scanner:{{ .Values.imageTag }}
          {{- end}}
        {{- else }}
          {{- if .Values.scanner.imageTag }}
        image: {{ .Values.registry }}/opssight-scanner:{{ .Values.scanner.imageTag }}
          {{- else }}
        image: {{ .Values.registry }}/opssight-scanner:{{ .Values.imageTag }}
          {{- end}}
        {{- end}}
        name: scanner
        ports:
        - containerPort: 3003
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.scanner.requestCpu }}
            memory: {{ .Values.scanner.requestMemory }}
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /etc/scanner
          name: scanner
        - mountPath: /var/images
          name: var-images
      - args:
        - /etc/image-getter/opssight.json
        command:
        - ./opssight-image-getter
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-opssight-blackduck
        {{- if .Values.imageGetter.registry }}
          {{- if .Values.imageGetter.imageTag }}
        image: {{ .Values.imageGetter.registry }}/opssight-image-getter:{{ .Values.imageGetter.imageTag }}
          {{- else }}
        image: {{ .Values.imageGetter.registry }}/opssight-image-getter:{{ .Values.imageTag }}
          {{- end}}
        {{- else }}
          {{- if .Values.imageGetter.imageTag }}
        image: {{ .Values.registry }}/opssight-image-getter:{{ .Values.imageGetter.imageTag }}
          {{- else }}
        image: {{ .Values.registry }}/opssight-image-getter:{{ .Values.imageTag }}
          {{- end}}
        {{- end}}
        name: image-getter
        ports:
        - containerPort: 3004
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.imageGetter.requestCpu }}
            memory: {{ .Values.imageGetter.requestMemory }}
        securityContext:
          privileged: false
        volumeMounts:
        - mountPath: /etc/image-getter
          name: image-getter
        - mountPath: /var/images
          name: var-images
      dnsPolicy: ClusterFirst
      {{- include "ops.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ .Release.Name }}-opssight-image-getter
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-opssight-opssight
        name: scanner
      - emptyDir: {}
        name: var-images
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-opssight-opssight
        name: image-getter
status:
  replicas: 0
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: opssight
    component: scanner
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-opssight-scanner
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-scanner
    port: 3003
    protocol: TCP
    targetPort: 3003
  selector:
    app: opssight
    component: scanner
    name: {{ .Release.Name }}
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: opssight
    component: scanner
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-opssight-image-getter
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-image-getter
    port: 3004
    protocol: TCP
    targetPort: 3004
  selector:
    app: opssight
    component: scanner
    name: {{ .Release.Name }}
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  labels:
    app: opssight
    component: image-getter
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-opssight-image-getter
  namespace: {{ .Release.Namespace }}
