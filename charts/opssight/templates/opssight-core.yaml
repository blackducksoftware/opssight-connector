apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: opssight
    component: core
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-opssight-core
  namespace: {{ .Release.Namespace }}
spec:
  {{- if eq .Values.status "Running" }}
  replicas: 1
  {{- else }}
  replicas: 0
  {{- end }}
  selector:
    matchLabels:
      app: opssight
      component: core
      name: {{ .Release.Name }}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: opssight
        component: core
        name: {{ .Release.Name }}
      name: {{ .Release.Name }}-opssight-core
    spec:
      containers:
      - args:
        - /etc/core/opssight.json
        command:
        - ./opssight-core
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-opssight-blackduck
        {{- if .Values.core.registry }}
          {{- if .Values.core.imageTag }}
        image: {{ .Values.core.registry }}/opssight-core:{{ .Values.core.imageTag }}
          {{- else }}
        image: {{ .Values.core.registry }}/opssight-core:{{ .Values.imageTag }}
          {{- end}}
        {{- else }}
          {{- if .Values.core.imageTag }}
        image: {{ .Values.registry }}/opssight-core:{{ .Values.core.imageTag }}
          {{- else }}
        image: {{ .Values.registry }}/opssight-core:{{ .Values.imageTag }}
          {{- end}}
        {{- end}}
        name: core
        ports:
        - containerPort: {{ .Values.spec.perceptor.port }}
          protocol: TCP
        resources:
          {{- toYaml .Values.core.resources | nindent 12 }}
        volumeMounts:
        - mountPath: /etc/core
          name: core
      dnsPolicy: ClusterFirst
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-opssight-opssight
        name: core
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: opssight
    component: core
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-opssight-core
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-core
    port: {{ .Values.spec.perceptor.port }}
    protocol: TCP
    targetPort: {{ .Values.spec.perceptor.port }}
  selector:
    app: opssight
    component: core
    name: {{ .Release.Name }}
  type: ClusterIP
status:
  loadBalancer: {}
---
{{- if or (eq .Values.spec.perceptor.expose "NodePort") (eq .Values.spec.perceptor.expose "LoadBalancer") }}
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: opssight
    component: core
    name: {{ .Release.Name }}
  name: {{ .Release.Name }}-opssight-core-exposed
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: port-core-exposed
    port: {{ .Values.spec.perceptor.port }}
    protocol: TCP
    targetPort: {{ .Values.spec.perceptor.port }}
  selector:
    app: opssight
    component: core
    name: {{ .Release.Name }}
  type: {{ .Values.spec.perceptor.expose }}
status:
  loadBalancer: {}
{{ else if eq .Values.spec.perceptor.expose "OpenShift" }}
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: {{ .Release.Name }}-opssight-core-exposed
  namespace: {{ .Release.Namespace }}
  labels:
    app: opssight
    component: core
    name: {{ .Release.Name }}
  annotations:
    openshift.io/host.generated: 'true'
spec:
  subdomain: ''
  to:
    kind: Service
    name: {{ .Release.Name }}-opssight-core
    weight: 100
  port:
    targetPort: port-core
  wildcardPolicy: None
{{ else }}
{{ end }}
