# Default values for Opssight.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# Docker registry to pull Black Duck images
registry: docker.io/blackducksoftware
imageTag: 2.2.5

# image pull secret to download the Black Duck images (mostly applicable for air gapped customers)
imagePullSecrets: [] # array of strings delimited by comma

# This is used to start or stop the app. Set to Running to start, or Stopped to stop.
status: Running

# Secrets base64 encoded
secret:
  externalHub: e30=
  securedRegistries: e30=

# Specifications as it will go to configMap
spec:
  logLevel: "debug"
  enableMetrics: true
  exposeMetrics: "OpenShift" #[None|LoadBalancer|NodePort|OpenShift]
  blackduck:
    connectionsEnvironmentVariableName: "blackduck.json"
    tlsVerification: false
  perceptor:
    port: 3001
    timings:
      checkForStalledScansPauseHours: 999999
      stalledScanClientTimeoutHours: 999999
      modelMetricsPauseSeconds: 15
      unknownImagePauseMilliseconds: 15000
      clientTimeoutMilliseconds: 100000
    useMockMode: false
    expose: "OpenShift" #[None|LoadBalancer|NodePort|OpenShift]
  perceiver:
    port: 3002
    certificate: ""
    certificateKey: ""
    annotationIntervalSeconds: 30
    dumpIntervalMinutes: 30
    podPerceiver:
      nameSpaceFilter: ""
    enableArtifactoryProcessor: true
    enableArtifactoryProcessorDumper: false
    exposeArtifactoryProcessor: "OpenShift" #[None|LoadBalancer|NodePort|OpenShift]
    enableImageProcessor: true
    enablePodProcessor: true
    enableQuayProcessor: true
    exposeQuayProcessor: "OpenShift" #[None|LoadBalancer|NodePort|OpenShift]
  scannerPod:
    scanner:
      port: 3003
      imageDirectory: "/var/images"
      blackDuckClientTimeoutSeconds: 600
    imageFacade:
      port: 3004
      host: "localhost"
      imagePullerType: "docker"
      createImagesOnly: false
    scannerReplicaCount: 1

init:
  registry: # override the docker registry at container level
  imageTag: 1.0.0
  securityContext: {}

prometheus:
  registry: docker.io/prom # override the docker registry at container level
  imageTag: v2.1.0
  limitMemory: 640Mi
  requestCpu: "1000m"
  requestMemory: 640Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podSecurityContext: {}
  securityContext: {}

podProcessor:
  registry:
  imageTag:
  resources:
    requests:
      cpu: 300m
      memory: 1300Mi

scanner:
  registry:
  imageTag:
  resources:
    requests:
      cpu: 300m
      memory: 1300Mi

imageGetter:
  registry:
  imageTag:
  resources:
    requests:
      cpu: 300m
      memory: 1300Mi

core:
  registry:
  imageTag:
  resources:
    requests:
      cpu: 300m
      memory: 1300Mi

imageProcessor:
  registry:
  imageTag:
  resources:
    requests:
      cpu: 300m
      memory: 1300Mi

quayProcessor:
  registry:
  imageTag:
  resources:
    requests:
      cpu: 300m
      memory: 1300Mi

artifactoryProcessor:
  registry:
  imageTag:
  resources:
    requests:
      cpu: 300m
      memory: 1300Mi
